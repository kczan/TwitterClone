{"version":3,"sources":["profiles/components.js","lookup/components.js","profiles/lookup.js","profiles/utilities.js","profiles/badge.js","tweets/lookup.js","tweets/create.js","tweets/buttons.js","tweets/detail.js","tweets/list.js","tweets/feed.js","tweets/components.js","serviceWorker.js","index.js"],"names":["UserLink","props","author","includeFullName","nameDisplay","first_name","last_name","Fragment","className","style","cursor","onClick","event","preventDefault","window","location","href","username","UserPicture","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","lookup","method","endpoint","callback","data","a","csrftoken","jsonData","JSON","stringify","response","obj","body","headers","fetch","status","indexOf","ok","json","result","console","log","Error","action","toLowerCase","DisplayCount","numeral","children","format","ProfileBadge","user","didFollowToggle","profileLoading","currentLabel","is_following","follower_count","followers_count","following_count","bio","ProfileBadgeComponent","useState","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","useEffect","apiGetProfile","actionVerb","apiProfileFollowToggle","newTweet","content","tweetId","id","apiGetTweets","nextUrl","undefined","replace","apiGetTweetsFeed","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","apiCreateTweet","current","value","ref","required","type","ActionButton","tweet","didPerformAction","likes","btnClass","actionDisplay","toUpperCase","handleActionBackend","display","apiTweetAction","ParentTweet","retweeter","og_tweet","Tweet","hideActions","didRetweet","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","next","results","handleDidRetweet","updatedTweetsInit","unshift","updatedFinalTweets","map","key","TweetsListFeed","TweetDetailComponent","setTweet","apiGetTweetDetail","Boolean","hostname","tweetsElement","getElementById","reactElement","createElement","MyTweetsComponent","setNewTweets","canTweet","tempNewTweets","dataset","ReactDOM","render","tweetsFeedElement","querySelectorAll","forEach","container","MyTweetDetailComponent","MyProfileBadgeComponent","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8b95fe0e.chunk.js","sourcesContent":["import React from 'react';\n\n\n\nexport function UserLink(props) {\n  let { author, includeFullName } = props\n  author = author ? author : {}\n  const nameDisplay = includeFullName && `${author.first_name} ${author.last_name} `\n\n  const handleUserLink = (event) => {\n    event.preventDefault()\n    window.location.href = `/profile/${author.username}`\n  }\n  return author !== {} &&\n    <React.Fragment>\n      <p className=' text-muted'>\n        {nameDisplay}\n        <span className='' style={{ cursor: 'pointer' }} onClick={handleUserLink}>@{author.username}</span>\n      </p></React.Fragment>\n}\n\nexport function UserPicture(props) {\n  let { author } = props\n  author = author ? author : {}\n  return <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\n    {author[0]}\n  </span>\n}","function getCookie(name) { // gets csrf cookie\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    var cookies = document.cookie.split(';');\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\n\nexport async function lookup(method, endpoint, callback, data) {\n  let jsonData;\n  const csrftoken = getCookie('csrftoken');\n  if (data) {\n    jsonData = JSON.stringify(data)\n  }\n  try {\n    let response = {};\n    if (method === 'POST') {\n      let obj = {\n        method: method,\n        body: jsonData,\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      }\n\n      if (csrftoken) {\n        obj.headers = {\n          'Content-Type': 'application/json',\n          \"X-CSRFToken\": csrftoken\n        }\n      }\n      response = await fetch(`http://localhost:8000/api/${endpoint}`, obj);\n      \n      if (response.status === 403) {\n        if (window.location.href.indexOf(\"login\") === -1) {\n          window.location.href = \"/login?showLoginRequired=true\"\n        }\n      }\n    } else {\n      response = await fetch(`http://localhost:8000/api/${endpoint}`);\n    }\n    if (response.ok) {\n      let result = await response.json()\n      console.log(result)\n      callback(result, response.status)\n    } else {\n      \n      throw new Error('Request Failed!');\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import { lookup } from '../lookup'\n\n\n\nexport async function apiGetProfile(username, callback) {\n  lookup('GET', `profile/${username}`, callback, [])\n}\n\nexport async function apiProfileFollowToggle(username, action, callback) {\n  const data = {action: `${action && action}`.toLowerCase()}\n  lookup('POST', `profile/${username}/follow`, callback, data)\n}","import React from 'react';\nimport numeral from \"numeral\";\n\n\nexport function DisplayCount(props) {\n  return (\n    <span className={props.className}>\n      {numeral(props.children).format(\"0 a\")}\n    </span>\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport {apiGetProfile, apiProfileFollowToggle} from './lookup'\nimport {UserPicture} from './components'\nimport {DisplayCount} from './utilities'\n\n\n\nfunction ProfileBadge(props){\n  const {user, didFollowToggle, profileLoading} = props\n  let currentLabel = user && user.is_following ? 'Unfollow' : 'Follow'\n  currentLabel = profileLoading ? \"Loading...\" : currentLabel\n  const handleFollowToggle = (event) => {\n    event.preventDefault()\n    if (didFollowToggle && !profileLoading) {\n      didFollowToggle(currentLabel)\n    }\n  }\n  return user ? (\n    <div className=\"m-3 p-2\">\n      <UserPicture author={user} />\n      <div className=\"pt-3 ml-1\">\n        {user.first_name} {user.last_name}{\" \"}\n      </div>\n      <div className=\"ml-1 text-muted small\">@{user.username}</div>\n      <section className=\"p-2 bg-light w-25\">\n        <p className=\"d-inline pr-3\">\n          <DisplayCount>{user.follower_count}</DisplayCount>\n          {user.followers_count === 1 ? \"follower\" : \"followers\"}\n        </p>\n        {\"|\"}\n        <p className=\"d-inline pl-3\">\n          <DisplayCount>{user.following_count}</DisplayCount> followed\n        </p>\n        <p className=\"text-truncate font-italic pt-2\">{user.bio}</p>\n      </section>\n      <button className=\"btn btn-primary\" onClick={handleFollowToggle}>\n        {currentLabel}\n      </button>\n    </div>\n  ) : null;\n}\n\n\nexport function ProfileBadgeComponent(props) {\n  const {username} = props\n  const [didLookup, setDidLookup] = useState(false)\n  const [profile, setProfile] = useState(null)\n  const [profileLoading, setProfileLoading] = useState(false)\n\n  const handleBackendLookup = (response, status) => {\n    if (status === 200) {\n      setProfile(response)\n    }\n  }\n  useEffect(() => {\n    if (didLookup === false) {\n      setDidLookup(true)\n      apiGetProfile(username, handleBackendLookup)\n    }\n  }, [didLookup, setDidLookup, username])\n\n  const handleNewFollow = (actionVerb) => {\n    apiProfileFollowToggle(username, actionVerb, (response, status) => {\n      if (status === 200) {\n        setProfile(response)\n      }\n      setProfileLoading(false)\n    })\n    setProfileLoading(true)\n\n  }\nreturn didLookup === false ? \"Loading...\" : profile && <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading}/>\n}","import {lookup} from '../lookup'\n\n\nexport async function apiCreateTweet(newTweet, callback) {\n  lookup('POST', 'tweets/create-tweet/', callback, { content: newTweet })\n}\n\nexport async function apiTweetAction(tweetId, action, callback) {\n  lookup('POST', 'tweets/action/', callback, { id: tweetId, action: action })\n}\n\nexport async function apiGetTweets(username, callback, nextUrl) {\n  let endpoint = 'tweets/'\n  if (username) {\n    endpoint += `?username=${username}`\n  }\n  if (nextUrl !== null && nextUrl !== undefined) {\n    endpoint = nextUrl.replace(\"http://localhost:8000/api/\", \"\")\n  }\n  lookup('GET', endpoint, callback, [])\n}\n\nexport async function apiGetTweetsFeed(callback, nextUrl) {\n  let endpoint = 'tweets/feed/'\n  if (nextUrl !== null && nextUrl !== undefined) {\n    endpoint = nextUrl.replace(\"http://localhost:8000/api/\", \"\")\n  }\n  lookup('GET', endpoint, callback, [])\n}\n\nexport async function apiGetTweetDetail(tweetId, callback) {\n  lookup('GET', `tweets/${tweetId}`, callback, [])\n}","import React from 'react'\nimport { apiCreateTweet } from './lookup'\n\n\nexport function TweetCreate(props) {\n  const textAreaRef = React.createRef()\n  const { didTweet } = props\n  const handleBackendUpdate = (response, status) => {\n    if (status === 201) {\n      didTweet(response)\n    } else {\n      console.log(response)\n      alert(\"An error occured please try again\")\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const newVal = textAreaRef.current.value\n    // backend api request\n    apiCreateTweet(newVal, handleBackendUpdate)\n    textAreaRef.current.value = ''\n  }\n  return <div className={props.className}>\n    <form onSubmit={handleSubmit}>\n      <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\n\n      </textarea>\n      <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n    </form>\n  </div>\n}","import React from 'react';\nimport { apiTweetAction } from './lookup'\n\n\n\nexport function ActionButton(props) {\n  const { tweet, action, didPerformAction } = props\n  const likes = tweet.likes ? tweet.likes : 0\n  const className = action.btnClass ? action.btnClass : 'btn btn-primary btn-sm'\n  let actionDisplay = action.type ? action.type.toUpperCase() : 'Action'\n  if (tweet.likes >= 2 && action.type === 'like') {\n    actionDisplay += 'S'\n  }\n\n\n  const handleActionBackend = (response, status) => {\n    console.log(status, response)\n    if ((status === 200 || status === 201) && didPerformAction) {\n      didPerformAction(response, status)\n    }\n  }\n  const handleClick = (event) => {\n    event.preventDefault()\n    apiTweetAction(tweet.id, action.type, handleActionBackend)\n\n  }\n  const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n  return <button className={className} id={`${action.type}_${tweet.id}`} onClick={handleClick}>{display} </button>\n}\n","import React, { useState } from 'react';\nimport { ActionButton } from './buttons'\nimport {UserLink, UserPicture} from '../profiles'\n\n\nexport function ParentTweet(props) {\n  const { tweet, retweeter } = props\n  return tweet.og_tweet ? <div className='row'>\n    <div className='col-11 mx-2 p-3 border rounded'>\n      <Tweet hideActions className={'mx-1'} tweet={tweet.og_tweet} />\n      <span className='mb-0 small text-muted'>Retweeted via <UserLink author={retweeter} includeFullName={false}/></span>\n    </div>\n  </div> : null\n}\n\nexport function Tweet(props) {\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6 bg-light';\n  const { tweet, didRetweet, hideActions } = props;\n  const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\n  const path = window.location.pathname\n  const match = path.match(/(?<tweetid>\\d+)/)\n  const urlTweetId = match ? match.groups.tweetid : -1\n  \n  const isDetail = `${tweet.id}` === `${urlTweetId}`\n\n  const handleLink = (event) => {\n    event.preventDefault()\n    window.location.href = `/${tweet.id}`\n  }\n\n\n  const handlePerformAction = (newActionTweet, status) => {\n    if (status === 200) {\n      setActionTweet(newActionTweet)\n    } else if (status === 201) {\n      if (didRetweet) {\n        didRetweet(newActionTweet)\n      }\n    }\n  }\n  return <div className={className}>\n    <div className='d-flex'>\n\n      <div className=''>\n        <UserPicture author={tweet.author}/>\n      </div>\n      <div className='col-11'>\n\n      \n    <div className='ml-2'>\n      {tweet.author ? <UserLink author={tweet.author} includeFullName={true} /> : <span className='col-1 mb-6'></span>}\n      <p>{tweet.content}</p>\n      <ParentTweet retweeter={tweet.author} tweet={tweet}/>\n\n    </div>\n\n      <div className='btn btn-group px-0'>\n      <span className='bg-light p-2 border rounded'>\n        {actionTweet && hideActions !== true && <React.Fragment>\n          <ActionButton tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: 'like', btnClass: 'btn btn-primary btn-sm ml-1' }} />\n          <ActionButton tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: 'unlike', btnClass: 'btn btn-primary btn-sm ml-1' }} />\n          <ActionButton tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: 'retweet', btnClass: 'btn btn-outline-success btn-sm ml-1' }} />\n        </React.Fragment>}\n        \n        {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm ml-1' onClick={handleLink}>View</button>}\n      </span>\n    </div>\n    </div>\n    </div>\n  </div>\n}","import React, { useState, useEffect } from 'react';\nimport {Tweet} from './detail'\nimport { apiGetTweets} from './lookup'\n\n\n\n\nexport function TweetsList(props) {\n  const [tweetsInit, setTweetsInit] = useState([])\n  const [tweets, setTweets] = useState([])\n  const [nextUrl, setNextUrl] = useState(null)\n  const [tweetsDidSet, setTweetsDidSet] = useState(false)\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit)\n    if (final.length !== tweets.length) {\n      setTweets(final)\n    }\n\n  }, [props.newTweets, tweetsInit, tweets])\n\n  useEffect(() => {\n    if (tweetsDidSet === false) {\n      const handleTweetRefresh = (response, status) => {\n        if (status === 200) {\n          setNextUrl(response.next)\n          setTweetsInit(response.results)\n          setTweetsDidSet(true)\n          setTweets(response.results)\n        }\n      }\n      apiGetTweets(props.username, handleTweetRefresh)\n    }\n  }, [tweetsInit, setTweetsDidSet, tweetsDidSet, props.username])\n\n\n  const handleDidRetweet = (newTweet) => {\n    const updatedTweetsInit = [...tweetsInit]\n    updatedTweetsInit.unshift(newTweet)\n    setTweetsInit(updatedTweetsInit)\n\n    const updatedFinalTweets = [...tweets]\n    updatedFinalTweets.unshift(tweets)\n    setTweets(updatedFinalTweets)\n  }\n\n  const handleLoadNext = (event) => {\n    event.preventDefault()\n    if (nextUrl !== null) {\n      const handleLoadNextResponse = (response, status) => {\n        if (status === 200) {\n          setNextUrl(response.next)\n          const newTweets = [...tweets].concat(response.results)\n          setTweetsInit(newTweets)\n          setTweets(newTweets)\n        }\n      }\n      apiGetTweets(props.username, handleLoadNextResponse, nextUrl)\n    }\n  }\n\n  return <React.Fragment>{tweets.map((tweet) => {\n    return <Tweet tweet={tweet} didRetweet={handleDidRetweet} key={tweet.id} className='mx-3 py-1 my-3' />\n    })}\n    { nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\n  </React.Fragment>\n}\n","import React, { useState, useEffect } from 'react';\nimport { Tweet } from './detail'\nimport { apiGetTweetsFeed } from './lookup'\n\n\n\n\nexport function TweetsListFeed(props) {\n  const [tweetsInit, setTweetsInit] = useState([])\n  const [tweets, setTweets] = useState([])\n  const [nextUrl, setNextUrl] = useState(null)\n  const [tweetsDidSet, setTweetsDidSet] = useState(false)\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit)\n    if (final.length !== tweets.length) {\n      setTweets(final)\n    }\n\n  }, [props.newTweets, tweetsInit, tweets])\n\n  useEffect(() => {\n    if (tweetsDidSet === false) {\n      const handleTweetRefresh = (response, status) => {\n        if (status === 200) {\n          setNextUrl(response.next)\n          setTweetsInit(response.results)\n          setTweetsDidSet(true)\n        }\n      }\n      apiGetTweetsFeed(handleTweetRefresh)\n    }\n  }, [tweetsInit, setTweetsDidSet, tweetsDidSet])  // props.username in dependencies?\n\n\n  const handleDidRetweet = (newTweet) => {\n    const updatedTweetsInit = [...tweetsInit]\n    updatedTweetsInit.unshift(newTweet)\n    setTweetsInit(updatedTweetsInit)\n\n    const updatedFinalTweets = [...tweets]\n    updatedFinalTweets.unshift(tweets)\n    setTweets(updatedFinalTweets)\n  }\n\n  const handleLoadNext = (event) => {\n    event.preventDefault()\n    if (nextUrl !== null) {\n      const handleLoadNextResponse = (response, status) => {\n        if (status === 200) {\n          setNextUrl(response.next)\n          const newTweets = [...tweets].concat(response.results)\n          setTweetsInit(newTweets)\n          setTweets(newTweets)\n        }\n      }\n      apiGetTweetsFeed(handleLoadNextResponse, nextUrl)\n    }\n  }\n\n  return <React.Fragment>{tweets.map((tweet) => {\n    return <Tweet tweet={tweet} didRetweet={handleDidRetweet} key={tweet.id} className='mx-3 py-1 my-3' />\n  })}\n    {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\n  </React.Fragment>\n}\n","\nimport React, { useEffect, useState } from 'react'\n\nimport { TweetCreate } from './create'\nimport { TweetsList } from './list'\nimport { TweetsListFeed} from './feed'\nimport { apiGetTweetDetail } from './lookup'\nimport { Tweet } from './detail'\n\nexport function FeedComponent(props) {\n  const [newTweets, setNewTweets] = useState([])\n  const canTweet = props.canTweet === \"false\" ? false : true\n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift(newTweet)\n    setNewTweets(tempNewTweets)\n  }\n  return <div className={props.className}>\n    {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\n    <TweetsListFeed newTweets={newTweets} {...props} />\n  </div>\n}\n\nexport function TweetsComponent(props) {\n  const [newTweets, setNewTweets] = useState([])\n  const canTweet = props.canTweet === \"false\" ? false : true\n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift(newTweet)\n    setNewTweets(tempNewTweets)\n  }\n  return <div className={props.className}>\n    {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\n    <TweetsList newTweets={newTweets} {...props} />\n  </div>\n}\n\nexport function TweetDetailComponent(props) {\n  const {tweetId} = props\n  const [didLookup, setDidLookup] = useState(false)\n  const [tweet, setTweet] = useState(null)\n  const handleBackendLookup = (response, status) => {\n    if (status === 200) {\n      setTweet(response)\n    } else {\n      alert('There was an error finding your tweet')\n    }\n  } \n  useEffect(() => {\n    if(didLookup === false) {\n      setDidLookup(true)\n      apiGetTweetDetail(tweetId, handleBackendLookup)\n    }\n  }, [didLookup, setDidLookup, tweetId])\n\n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ProfileBadgeComponent } from './profiles'\nimport { TweetsComponent, TweetDetailComponent, TweetsListFeed } from './tweets'\nimport * as serviceWorker from './serviceWorker';\n\nconst tweetsElement = document.getElementById('tweets')\n\nconst reactElement = React.createElement\n\nif (tweetsElement) {\n  const MyTweetsComponent = reactElement(TweetsComponent, tweetsElement.dataset)\n  ReactDOM.render(MyTweetsComponent, tweetsElement);\n}\n\n\nconst tweetsFeedElement = document.getElementById('tweets-feed')\nif (tweetsFeedElement) {\n  const MyTweetsComponent = reactElement(TweetsListFeed, tweetsFeedElement.dataset)\n  ReactDOM.render(MyTweetsComponent, tweetsFeedElement);\n}\n\nconst tweetDetailElement = document.querySelectorAll('.tweet-detail')\n\ntweetDetailElement.forEach(container => {\n  const MyTweetDetailComponent = reactElement(TweetDetailComponent, container.dataset)\n  ReactDOM.render(MyTweetDetailComponent, container);\n})\n\nconst userProfileBadgeElement = document.querySelectorAll('.tweet-profile-badge')\n\nuserProfileBadgeElement.forEach(container => {\n  const MyProfileBadgeComponent = reactElement(ProfileBadgeComponent, container.dataset)\n  ReactDOM.render(MyProfileBadgeComponent, container);\n})\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}