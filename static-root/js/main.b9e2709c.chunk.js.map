{"version":3,"sources":["profiles/components.js","lookup/components.js","profiles/lookup.js","profiles/utilities.js","profiles/badge.js","profiles/searchResults.js","tweets/lookup.js","tweets/create.js","tweets/buttons.js","tweets/detail.js","tweets/list.js","tweets/feed.js","tweets/components.js","serviceWorker.js","index.js"],"names":["UserLink","props","author","includeFullName","nameDisplay","first_name","last_name","Fragment","className","style","cursor","onClick","event","preventDefault","window","location","href","username","UserPicture","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","lookup","method","endpoint","callback","data","a","csrftoken","jsonData","JSON","stringify","response","obj","body","headers","fetch","status","indexOf","ok","json","result","Error","console","log","action","toLowerCase","apiGetProfileSearchResults","keyword","DisplayCount","numeral","children","format","ProfileBadge","user","didFollowToggle","profileLoading","inSearch","currentLabel","is_following","follower_count","followers_count","following_count","bio","ProfileBadgeComponent","useState","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","useEffect","apiGetProfile","actionVerb","apiProfileFollowToggle","ProfileSearchResults","profilesInit","setProfilesInit","profiles","setProfiles","nextUrl","setNextUrl","profilesDidSet","setProfilesDidSet","next","results","map","newTweet","content","tweetId","id","apiGetTweets","undefined","replace","apiGetTweetsFeed","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","apiCreateTweet","current","value","ref","required","type","ActionButton","tweet","didPerformAction","likes","btnClass","actionDisplay","toUpperCase","handleActionBackend","display","apiTweetAction","ParentTweet","retweeter","og_tweet","Tweet","hideActions","didRetweet","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","handleDidRetweet","updatedTweetsInit","unshift","updatedFinalTweets","key","TweetsListFeed","TweetDetailComponent","setTweet","apiGetTweetDetail","Boolean","hostname","tweetsElement","getElementById","reactElement","createElement","MyTweetsComponent","setNewTweets","canTweet","tempNewTweets","dataset","ReactDOM","render","tweetsFeedElement","MyFeedComponent","querySelectorAll","forEach","container","MyTweetDetailComponent","MyProfileBadgeComponent","MyProfileSearchResultsComponent","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b9e2709c.chunk.js","sourcesContent":["import React from \"react\";\n\nexport function UserLink(props) {\n  let { author, includeFullName } = props;\n  author = author ? author : {};\n  const nameDisplay =\n    includeFullName && `${author.first_name} ${author.last_name} `;\n\n  const handleUserLink = (event) => {\n    event.preventDefault();\n    window.location.href = `/profile/${author.username}`;\n  };\n  return (\n    author !== {} && (\n      <React.Fragment>\n        <p className=\" text-muted\">\n          {nameDisplay}\n          <span\n            className=\"\"\n            style={{ cursor: \"pointer\" }}\n            onClick={handleUserLink}\n          >\n            @{author.username}\n          </span>\n        </p>\n      </React.Fragment>\n    )\n  );\n}\n\nexport function UserPicture(props) {\n  let { author } = props;\n  author = author ? author : {};\n  return (\n    <span className=\"mx-1 px-3 py-2 rounded-circle bg-dark text-white\">\n      {author[0]}\n    </span>\n  );\n}\n","function getCookie(name) {\n  // gets csrf cookie\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== \"\") {\n    var cookies = document.cookie.split(\";\");\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\nexport async function lookup(method, endpoint, callback, data) {\n  let jsonData;\n  const csrftoken = getCookie(\"csrftoken\");\n  if (data) {\n    jsonData = JSON.stringify(data);\n  }\n  try {\n    let response = {};\n    if (method === \"POST\") {\n      let obj = {\n        method: method,\n        body: jsonData,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n\n      if (csrftoken) {\n        obj.headers = {\n          \"Content-Type\": \"application/json\",\n          \"X-CSRFToken\": csrftoken,\n        };\n      }\n      response = await fetch(`http://localhost:8000/api/${endpoint}`, obj);\n\n      if (response.status === 403) {\n        if (window.location.href.indexOf(\"login\") === -1) {\n          window.location.href = \"/login?showLoginRequired=true\";\n        }\n      }\n    } else {\n      response = await fetch(`http://localhost:8000/api/${endpoint}`);\n    }\n    if (response.ok) {\n      let result = await response.json();\n      callback(result, response.status);\n    } else {\n      throw new Error(\"Request Failed!\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import { lookup } from \"../lookup\";\n\nexport async function apiGetProfile(username, callback) {\n  lookup(\"GET\", `profile/${username}`, callback, []);\n}\n\nexport async function apiProfileFollowToggle(username, action, callback) {\n  const data = { action: `${action && action}`.toLowerCase() };\n  lookup(\"POST\", `profile/${username}/follow`, callback, data);\n}\n\nexport async function apiGetProfileSearchResults(keyword, callback) {\n  lookup(\"GET\", `profile/search/${keyword}`, callback, []);\n}\n","import React from \"react\";\nimport numeral from \"numeral\";\n\nexport function DisplayCount(props) {\n  return (\n    <span className={props.className}>\n      {numeral(props.children).format(\"0 a\")}\n    </span>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { apiGetProfile, apiProfileFollowToggle } from \"./lookup\";\nimport { UserPicture } from \"./components\";\nimport { DisplayCount } from \"./utilities\";\n\nfunction ProfileBadge(props) {\n  const { user, didFollowToggle, profileLoading, inSearch } = props;\n  let currentLabel = user && user.is_following ? \"Unfollow\" : \"Follow\";\n  currentLabel = profileLoading ? \"Loading...\" : currentLabel;\n  const handleFollowToggle = (event) => {\n    event.preventDefault();\n    if (didFollowToggle && !profileLoading) {\n      didFollowToggle(currentLabel);\n    }\n  };\n  return user ? (\n    <div className=\"m-3 p-2\">\n      <a\n        {...(inSearch ? { href: `/profile/${user.username}` } : {})}\n        className=\"nounderline\"\n      >\n        <div>\n          <UserPicture author={user} />\n          <div className=\"pt-3 ml-1\">\n            {user.first_name} {user.last_name}{\" \"}\n          </div>\n          <div className=\"ml-1 text-muted small\">@{user.username}</div>\n          <section className=\"p-2 bg-light w-25\">\n            <p className=\"d-inline pr-3\">\n              <DisplayCount>{user.follower_count}</DisplayCount>\n              {user.followers_count === 1 ? \"follower\" : \"followers\"}\n            </p>\n            {\"|\"}\n            <p className=\"d-inline pl-3\">\n              <DisplayCount>{user.following_count}</DisplayCount> followed\n            </p>\n            <p className=\"text-truncate font-italic pt-2\">{user.bio}</p>\n          </section>\n        </div>\n      </a>\n      <button className=\"btn btn-primary\" onClick={handleFollowToggle}>\n        {currentLabel}\n      </button>\n    </div>\n  ) : null;\n}\n\nexport function ProfileBadgeComponent(props) {\n  const { username, inSearch } = props;\n  const [didLookup, setDidLookup] = useState(false);\n  const [profile, setProfile] = useState(null);\n  const [profileLoading, setProfileLoading] = useState(false);\n\n  const handleBackendLookup = (response, status) => {\n    if (status === 200) {\n      setProfile(response);\n    }\n  };\n  useEffect(() => {\n    if (didLookup === false) {\n      setDidLookup(true);\n      apiGetProfile(username, handleBackendLookup);\n    }\n  }, [didLookup, setDidLookup, username]);\n\n  const handleNewFollow = (actionVerb) => {\n    apiProfileFollowToggle(username, actionVerb, (response, status) => {\n      if (status === 200) {\n        setProfile(response);\n      }\n      setProfileLoading(false);\n    });\n    setProfileLoading(true);\n  };\n  return didLookup === false\n    ? \"Loading...\"\n    : profile && (\n        <ProfileBadge\n          user={profile}\n          didFollowToggle={handleNewFollow}\n          profileLoading={profileLoading}\n          inSearch={inSearch}\n        />\n      );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { ProfileBadgeComponent } from \"./badge\";\nimport { apiGetProfileSearchResults } from \"./lookup\";\n\nexport function ProfileSearchResults(props) {\n  const { username } = props;\n\n  const [profilesInit, setProfilesInit] = useState([]);\n  const [profiles, setProfiles] = useState([]);\n  const [nextUrl, setNextUrl] = useState(null);\n  const [profilesDidSet, setProfilesDidSet] = useState(false);\n\n  useEffect(() => {\n    if (profilesDidSet === false) {\n      const handleProfilesRefresh = (response, status) => {\n        if (status === 200) {\n          setNextUrl(response.next);\n          setProfilesDidSet(true);\n          setProfilesInit(response.results);\n        }\n      };\n      apiGetProfileSearchResults(username, handleProfilesRefresh);\n    }\n  }, [setProfilesDidSet, profilesDidSet, setProfilesInit, username]);\n\n  const handleLoadNext = (event) => {\n    event.preventDefault();\n    if (nextUrl !== null) {\n      const handleLoadNextResponse = (response, status) => {\n        if (status === 200) {\n          setNextUrl(response.next);\n          setProfiles(profiles);\n        }\n      };\n      apiGetProfileSearchResults(username, handleLoadNextResponse, nextUrl);\n    }\n  };\n  return (\n    <React.Fragment>\n      {profilesInit.map((profile) => {\n        return (\n          <ProfileBadgeComponent username={profile.username} inSearch={true} />\n        );\n      })}\n      {nextUrl !== null && (\n        <button onClick={handleLoadNext} className=\"btn btn-outline-primary\">\n          Load next\n        </button>\n      )}\n    </React.Fragment>\n  );\n}\n","import { lookup } from \"../lookup\";\n\nexport async function apiCreateTweet(newTweet, callback) {\n  lookup(\"POST\", \"tweets/create-tweet/\", callback, { content: newTweet });\n}\n\nexport async function apiTweetAction(tweetId, action, callback) {\n  lookup(\"POST\", \"tweets/action/\", callback, { id: tweetId, action: action });\n}\n\nexport async function apiGetTweets(username, callback, nextUrl) {\n  let endpoint = \"tweets/\";\n  if (username) {\n    endpoint += `?username=${username}`;\n  }\n  if (nextUrl !== null && nextUrl !== undefined) {\n    endpoint = nextUrl.replace(\"http://localhost:8000/api/\", \"\");\n  }\n  lookup(\"GET\", endpoint, callback, []);\n}\n\nexport async function apiGetTweetsFeed(callback, nextUrl) {\n  let endpoint = \"tweets/feed/\";\n  if (nextUrl !== null && nextUrl !== undefined) {\n    endpoint = nextUrl.replace(\"http://localhost:8000/api/\", \"\");\n  }\n  lookup(\"GET\", endpoint, callback, []);\n}\n\nexport async function apiGetTweetDetail(tweetId, callback) {\n  lookup(\"GET\", `tweets/${tweetId}`, callback, []);\n}\n","import React from \"react\";\nimport { apiCreateTweet } from \"./lookup\";\n\nexport function TweetCreate(props) {\n  const textAreaRef = React.createRef();\n  const { didTweet } = props;\n  const handleBackendUpdate = (response, status) => {\n    if (status === 201) {\n      didTweet(response);\n    } else {\n      console.log(response);\n      alert(\"An error occured please try again\");\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const newVal = textAreaRef.current.value;\n    // backend api request\n    apiCreateTweet(newVal, handleBackendUpdate);\n    textAreaRef.current.value = \"\";\n  };\n  return (\n    <div className={props.className}>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          ref={textAreaRef}\n          required={true}\n          className=\"form-control\"\n          name=\"tweet\"\n        ></textarea>\n        <button type=\"submit\" className=\"btn btn-primary my-3\">\n          Tweet\n        </button>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { apiTweetAction } from \"./lookup\";\n\nexport function ActionButton(props) {\n  const { tweet, action, didPerformAction } = props;\n  const likes = tweet.likes ? tweet.likes : 0;\n  const className = action.btnClass\n    ? action.btnClass\n    : \"btn btn-primary btn-sm\";\n  let actionDisplay = action.type ? action.type.toUpperCase() : \"Action\";\n  if (tweet.likes >= 2 && action.type === \"like\") {\n    actionDisplay += \"S\";\n  }\n\n  const handleActionBackend = (response, status) => {\n    console.log(status, response);\n    if ((status === 200 || status === 201) && didPerformAction) {\n      didPerformAction(response, status);\n    }\n  };\n  const handleClick = (event) => {\n    event.preventDefault();\n    apiTweetAction(tweet.id, action.type, handleActionBackend);\n  };\n  const display =\n    action.type === \"like\" ? `${likes} ${actionDisplay}` : actionDisplay;\n  return (\n    <button\n      className={className}\n      id={`${action.type}_${tweet.id}`}\n      onClick={handleClick}\n    >\n      {display}{\" \"}\n    </button>\n  );\n}\n","import React, { useState } from \"react\";\nimport { ActionButton } from \"./buttons\";\nimport { UserLink, UserPicture } from \"../profiles\";\n\nexport function ParentTweet(props) {\n  const { tweet, retweeter } = props;\n  return tweet.og_tweet ? (\n    <div className=\"row\">\n      <div className=\"col-11 mx-2 p-3 border rounded\">\n        <Tweet hideActions className={\"mx-1\"} tweet={tweet.og_tweet} />\n        <span className=\"mb-0 small text-muted\">\n          Retweeted via <UserLink author={retweeter} includeFullName={false} />\n        </span>\n      </div>\n    </div>\n  ) : null;\n}\n\nexport function Tweet(props) {\n  const className = props.className\n    ? props.className\n    : \"col-10 mx-auto col-md-6 bg-light\";\n  const { tweet, didRetweet, hideActions } = props;\n  const [actionTweet, setActionTweet] = useState(\n    props.tweet ? props.tweet : null\n  );\n  const path = window.location.pathname;\n  const match = path.match(/(?<tweetid>\\d+)/);\n  const urlTweetId = match ? match.groups.tweetid : -1;\n\n  const isDetail = `${tweet.id}` === `${urlTweetId}`;\n\n  const handleLink = (event) => {\n    event.preventDefault();\n    window.location.href = `/${tweet.id}`;\n  };\n\n  const handlePerformAction = (newActionTweet, status) => {\n    if (status === 200) {\n      setActionTweet(newActionTweet);\n    } else if (status === 201) {\n      if (didRetweet) {\n        didRetweet(newActionTweet);\n      }\n    }\n  };\n  return (\n    <div className={className}>\n      <div className=\"d-flex\">\n        <div className=\"\">\n          <UserPicture author={tweet.author} />\n        </div>\n        <div className=\"col-11\">\n          <div className=\"ml-2\">\n            {tweet.author ? (\n              <UserLink author={tweet.author} includeFullName={true} />\n            ) : (\n              <span className=\"col-1 mb-6\"></span>\n            )}\n            <p>{tweet.content}</p>\n            <ParentTweet retweeter={tweet.author} tweet={tweet} />\n          </div>\n\n          <div className=\"btn btn-group px-0 button-container\">\n            <span className=\"bg-light p-2 border rounded \">\n              {actionTweet && hideActions !== true && (\n                <React.Fragment>\n                  <ActionButton\n                    tweet={actionTweet}\n                    didPerformAction={handlePerformAction}\n                    action={{\n                      type: \"like\",\n                      btnClass: \"btn btn-primary btn-sm ml-1 single-action-btn\",\n                    }}\n                  />\n                  <ActionButton\n                    tweet={actionTweet}\n                    didPerformAction={handlePerformAction}\n                    action={{\n                      type: \"unlike\",\n                      btnClass: \"btn btn-primary btn-sm ml-1 single-action-btn\",\n                    }}\n                  />\n                  <ActionButton\n                    tweet={actionTweet}\n                    didPerformAction={handlePerformAction}\n                    action={{\n                      type: \"retweet\",\n                      btnClass:\n                        \"btn btn-outline-success btn-sm ml-1 single-action-btn\",\n                    }}\n                  />\n                </React.Fragment>\n              )}\n\n              {isDetail === true ? null : (\n                <button\n                  className=\"btn btn-outline-primary btn-sm ml-1\"\n                  onClick={handleLink}\n                >\n                  View\n                </button>\n              )}\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Tweet } from \"./detail\";\nimport { apiGetTweets } from \"./lookup\";\n\nexport function TweetsList(props) {\n  const [tweetsInit, setTweetsInit] = useState([]);\n  const [tweets, setTweets] = useState([]);\n  const [nextUrl, setNextUrl] = useState(null);\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit);\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n  }, [props.newTweets, tweetsInit, tweets]);\n\n  useEffect(() => {\n    if (tweetsDidSet === false) {\n      const handleTweetRefresh = (response, status) => {\n        if (status === 200) {\n          setNextUrl(response.next);\n          setTweetsInit(response.results);\n          setTweetsDidSet(true);\n          setTweets(response.results);\n        }\n      };\n      apiGetTweets(props.username, handleTweetRefresh);\n    }\n  }, [tweetsInit, setTweetsDidSet, tweetsDidSet, props.username]);\n\n  const handleDidRetweet = (newTweet) => {\n    const updatedTweetsInit = [...tweetsInit];\n    updatedTweetsInit.unshift(newTweet);\n    setTweetsInit(updatedTweetsInit);\n\n    const updatedFinalTweets = [...tweets];\n    updatedFinalTweets.unshift(tweets);\n    setTweets(updatedFinalTweets);\n  };\n\n  const handleLoadNext = (event) => {\n    event.preventDefault();\n    if (nextUrl !== null) {\n      const handleLoadNextResponse = (response, status) => {\n        if (status === 200) {\n          setNextUrl(response.next);\n          const newTweets = [...tweets].concat(response.results);\n          setTweetsInit(newTweets);\n          setTweets(newTweets);\n        }\n      };\n      apiGetTweets(props.username, handleLoadNextResponse, nextUrl);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {tweets.map((tweet) => {\n        return (\n          <Tweet\n            tweet={tweet}\n            didRetweet={handleDidRetweet}\n            key={tweet.id}\n            className=\"mx-3 py-1 my-3\"\n          />\n        );\n      })}\n      {nextUrl !== null && (\n        <button onClick={handleLoadNext} className=\"btn btn-outline-primary\">\n          Load next\n        </button>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Tweet } from \"./detail\";\nimport { apiGetTweetsFeed } from \"./lookup\";\n\nexport function TweetsListFeed(props) {\n  const [tweetsInit, setTweetsInit] = useState([]);\n  const [tweets, setTweets] = useState([]);\n  const [nextUrl, setNextUrl] = useState(null);\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit);\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n  }, [props.newTweets, tweetsInit, tweets]);\n\n  useEffect(() => {\n    if (tweetsDidSet === false) {\n      const handleTweetRefresh = (response, status) => {\n        if (status === 200) {\n          setNextUrl(response.next);\n          setTweetsInit(response.results);\n          setTweetsDidSet(true);\n        }\n      };\n      apiGetTweetsFeed(handleTweetRefresh);\n    }\n  }, [tweetsInit, setTweetsDidSet, tweetsDidSet, props.username]); // props.username in dependencies?\n\n  const handleDidRetweet = (newTweet) => {\n    const updatedTweetsInit = [...tweetsInit];\n    updatedTweetsInit.unshift(newTweet);\n    setTweetsInit(updatedTweetsInit);\n\n    const updatedFinalTweets = [...tweets];\n    updatedFinalTweets.unshift(tweets);\n    setTweets(updatedFinalTweets);\n  };\n\n  const handleLoadNext = (event) => {\n    event.preventDefault();\n    if (nextUrl !== null) {\n      const handleLoadNextResponse = (response, status) => {\n        if (status === 200) {\n          setNextUrl(response.next);\n          const newTweets = [...tweets].concat(response.results);\n          setTweetsInit(newTweets);\n          setTweets(newTweets);\n        }\n      };\n      apiGetTweetsFeed(handleLoadNextResponse, nextUrl);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {tweets.map((tweet) => {\n        return (\n          <Tweet\n            tweet={tweet}\n            didRetweet={handleDidRetweet}\n            key={tweet.id}\n            className=\"mx-3 py-1 my-3\"\n          />\n        );\n      })}\n      {nextUrl !== null && (\n        <button onClick={handleLoadNext} className=\"btn btn-outline-primary\">\n          Load next\n        </button>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport { TweetCreate } from \"./create\";\nimport { TweetsList } from \"./list\";\nimport { TweetsListFeed } from \"./feed\";\nimport { apiGetTweetDetail } from \"./lookup\";\nimport { Tweet } from \"./detail\";\n\nexport function FeedComponent(props) {\n  const [newTweets, setNewTweets] = useState([]);\n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets];\n    tempNewTweets.unshift(newTweet);\n    setNewTweets(tempNewTweets);\n  };\n  return (\n    <div className={props.className}>\n      <TweetCreate\n        didTweet={handleNewTweet}\n        className=\"col-md-4 mx-auto tweet-create-form\"\n      />\n      <TweetsListFeed newTweets={newTweets} {...props} />\n    </div>\n  );\n}\n\nexport function TweetsComponent(props) {\n  const [newTweets, setNewTweets] = useState([]);\n  const canTweet = props.canTweet === \"false\" ? false : true;\n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets];\n    tempNewTweets.unshift(newTweet);\n    setNewTweets(tempNewTweets);\n  };\n  return (\n    <div className={props.className}>\n      {canTweet === true && (\n        <TweetCreate\n          didTweet={handleNewTweet}\n          className=\"col-md-4 mx-auto tweet-create-form\"\n        />\n      )}\n      <TweetsList newTweets={newTweets} {...props} />\n    </div>\n  );\n}\n\nexport function TweetDetailComponent(props) {\n  const { tweetId } = props;\n  const [didLookup, setDidLookup] = useState(false);\n  const [tweet, setTweet] = useState(null);\n  const handleBackendLookup = (response, status) => {\n    if (status === 200) {\n      setTweet(response);\n    } else {\n      alert(\"There was an error finding your tweet\");\n    }\n  };\n  useEffect(() => {\n    if (didLookup === false) {\n      setDidLookup(true);\n      apiGetTweetDetail(tweetId, handleBackendLookup);\n    }\n  }, [didLookup, setDidLookup, tweetId]);\n\n  return tweet === null ? null : (\n    <Tweet tweet={tweet} className={props.className} />\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { ProfileBadgeComponent, ProfileSearchResults } from \"./profiles\";\nimport { TweetsComponent, TweetDetailComponent, FeedComponent } from \"./tweets\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst tweetsElement = document.getElementById(\"tweets\");\n\nconst reactElement = React.createElement;\n\nif (tweetsElement) {\n  const MyTweetsComponent = reactElement(\n    TweetsComponent,\n    tweetsElement.dataset\n  );\n  ReactDOM.render(MyTweetsComponent, tweetsElement);\n}\n\nconst tweetsFeedElement = document.getElementById(\"tweets-feed\");\nif (tweetsFeedElement) {\n  const MyFeedComponent = reactElement(\n    FeedComponent,\n    tweetsFeedElement.dataset\n  );\n  ReactDOM.render(MyFeedComponent, tweetsFeedElement);\n}\n\nconst tweetDetailElement = document.querySelectorAll(\".tweet-detail\");\n\ntweetDetailElement.forEach((container) => {\n  const MyTweetDetailComponent = reactElement(\n    TweetDetailComponent,\n    container.dataset\n  );\n  ReactDOM.render(MyTweetDetailComponent, container);\n});\n\nconst userProfileBadgeElement = document.querySelectorAll(\n  \".tweet-profile-badge\"\n);\n\nuserProfileBadgeElement.forEach((container) => {\n  const MyProfileBadgeComponent = reactElement(\n    ProfileBadgeComponent,\n    container.dataset\n  );\n  ReactDOM.render(MyProfileBadgeComponent, container);\n});\n\nconst profileSearchElement = document.querySelectorAll(\n  \".profile-search-element\"\n);\n\nprofileSearchElement.forEach((container) => {\n  const MyProfileSearchResultsComponent = reactElement(\n    ProfileSearchResults,\n    container.dataset\n  );\n  ReactDOM.render(MyProfileSearchResultsComponent, container);\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}